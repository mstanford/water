//
// AUTOGENERATED 12/24/2008 11:42:14 AM
//
using System;

namespace Surf
{
	public class Tokenizer
	{
		private System.Text.StringBuilder _stringBuilder = new System.Text.StringBuilder();

		public Tokenizer()
		{
		}

		public Token Tokenize(TextReader reader)
		{
			int n;
			char ch;

			_stringBuilder.Length = 0;

			//
			// Trim whitespace
			//
			while ((n = reader.Peek()) != -1)
			{
				ch = (char)n;
				switch (ch)
				{
					case ' ':
					case '\t':
					case '\r':
					case '\n':
						{
							reader.Read();
							break;
						}
					default:
						{
							goto s0;
						}
				}
			}

		s0:
			n = reader.Peek();
			if (n == -1)
			{
				if (_stringBuilder.Length == 0)
				{
					return new Token(TokenType._EOF_);
				}
				else
				{
					return new Token(TokenType._ERROR_);
				}
			}
			ch = (char)n;
			switch (ch)
			{
				case '\"':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s1;
					}
				case '&':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s4;
					}
				case '\'':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s5;
					}
				case '(':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s8;
					}
				case ')':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s9;
					}
				case ',':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s10;
					}
				case '0':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s11;
					}
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s14;
					}
				case ':':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s15;
					}
				case '=':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s17;
					}
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s18;
					}
				case '[':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s19;
					}
				case '^':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s21;
					}
				case 'f':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s22;
					}
				case 't':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s27;
					}
				case '{':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s29;
					}
				case '|':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s30;
					}
				case '}':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s31;
					}
				default:
					{
						_stringBuilder.Append(ch);
						goto se;
					}
			}

		s1:
			n = reader.Peek();
			if (n == -1)
			{
				if (_stringBuilder.Length == 0)
				{
					return new Token(TokenType._EOF_);
				}
				else
				{
					return new Token(TokenType._ERROR_);
				}
			}
			ch = (char)n;
			switch (ch)
			{
				case '.':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '\\':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s2;
					}
				default:
					{
						_stringBuilder.Append(ch);
						goto se;
					}
			}

		s2:
			n = reader.Peek();
			if (n == -1)
			{
				if (_stringBuilder.Length == 0)
				{
					return new Token(TokenType._EOF_);
				}
				else
				{
					return new Token(TokenType._ERROR_);
				}
			}
			ch = (char)n;
			switch (ch)
			{
				case '.':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '\\':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s2;
					}
				case '\"':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s3;
					}
				default:
					{
						_stringBuilder.Append(ch);
						goto se;
					}
			}

		s3:
			return new Token(TokenType.STRING, _stringBuilder.ToString());

		s4:
			return new Token(TokenType.INTERSECTION, _stringBuilder.ToString());

		s5:
			n = reader.Peek();
			if (n == -1)
			{
				if (_stringBuilder.Length == 0)
				{
					return new Token(TokenType._EOF_);
				}
				else
				{
					return new Token(TokenType._ERROR_);
				}
			}
			ch = (char)n;
			switch (ch)
			{
				case '.':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '\\':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s6;
					}
				default:
					{
						_stringBuilder.Append(ch);
						goto se;
					}
			}

		s6:
			n = reader.Peek();
			if (n == -1)
			{
				if (_stringBuilder.Length == 0)
				{
					return new Token(TokenType._EOF_);
				}
				else
				{
					return new Token(TokenType._ERROR_);
				}
			}
			ch = (char)n;
			switch (ch)
			{
				case '\'':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s7;
					}
				default:
					{
						_stringBuilder.Append(ch);
						goto se;
					}
			}

		s7:
			return new Token(TokenType.CHARACTER, _stringBuilder.ToString());

		s8:
			return new Token(TokenType.LEFT_PAREN, _stringBuilder.ToString());

		s9:
			return new Token(TokenType.RIGHT_PAREN, _stringBuilder.ToString());

		s10:
			return new Token(TokenType.COMMA, _stringBuilder.ToString());

		s11:
			n = reader.Peek();
			if (n == -1)
			{
				if (_stringBuilder.Length == 0)
				{
					return new Token(TokenType._EOF_);
				}
				else
				{
					return new Token(TokenType.INTEGER, _stringBuilder.ToString());
				}
			}
			ch = (char)n;
			switch (ch)
			{
				case '.':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s12;
					}
				default:
					{
						return new Token(TokenType.INTEGER, _stringBuilder.ToString());
					}
			}

		s12:
			n = reader.Peek();
			if (n == -1)
			{
				if (_stringBuilder.Length == 0)
				{
					return new Token(TokenType._EOF_);
				}
				else
				{
					return new Token(TokenType._ERROR_);
				}
			}
			ch = (char)n;
			switch (ch)
			{
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s13;
					}
				default:
					{
						_stringBuilder.Append(ch);
						goto se;
					}
			}

		s13:
			n = reader.Peek();
			if (n == -1)
			{
				if (_stringBuilder.Length == 0)
				{
					return new Token(TokenType._EOF_);
				}
				else
				{
					return new Token(TokenType.FLOAT, _stringBuilder.ToString());
				}
			}
			ch = (char)n;
			switch (ch)
			{
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s13;
					}
				default:
					{
						return new Token(TokenType.FLOAT, _stringBuilder.ToString());
					}
			}

		s14:
			n = reader.Peek();
			if (n == -1)
			{
				if (_stringBuilder.Length == 0)
				{
					return new Token(TokenType._EOF_);
				}
				else
				{
					return new Token(TokenType.INTEGER, _stringBuilder.ToString());
				}
			}
			ch = (char)n;
			switch (ch)
			{
				case '.':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s12;
					}
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s14;
					}
				default:
					{
						return new Token(TokenType.INTEGER, _stringBuilder.ToString());
					}
			}

		s15:
			n = reader.Peek();
			if (n == -1)
			{
				if (_stringBuilder.Length == 0)
				{
					return new Token(TokenType._EOF_);
				}
				else
				{
					return new Token(TokenType._ERROR_);
				}
			}
			ch = (char)n;
			switch (ch)
			{
				case '=':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s16;
					}
				default:
					{
						_stringBuilder.Append(ch);
						goto se;
					}
			}

		s16:
			return new Token(TokenType.ASSIGNMENT, _stringBuilder.ToString());

		s17:
			return new Token(TokenType.EQUALS, _stringBuilder.ToString());

		s18:
			n = reader.Peek();
			if (n == -1)
			{
				if (_stringBuilder.Length == 0)
				{
					return new Token(TokenType._EOF_);
				}
				else
				{
					return new Token(TokenType.IDENTIFIER, _stringBuilder.ToString());
				}
			}
			ch = (char)n;
			switch (ch)
			{
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s18;
					}
				default:
					{
						return new Token(TokenType.IDENTIFIER, _stringBuilder.ToString());
					}
			}

		s19:
			n = reader.Peek();
			if (n == -1)
			{
				if (_stringBuilder.Length == 0)
				{
					return new Token(TokenType._EOF_);
				}
				else
				{
					return new Token(TokenType._ERROR_);
				}
			}
			ch = (char)n;
			switch (ch)
			{
				case '0':
				case '1':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s19;
					}
				case ']':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s20;
					}
				default:
					{
						_stringBuilder.Append(ch);
						goto se;
					}
			}

		s20:
			return new Token(TokenType.BITMAP, _stringBuilder.ToString());

		s21:
			return new Token(TokenType.DIFFERENCE, _stringBuilder.ToString());

		s22:
			n = reader.Peek();
			if (n == -1)
			{
				if (_stringBuilder.Length == 0)
				{
					return new Token(TokenType._EOF_);
				}
				else
				{
					return new Token(TokenType.IDENTIFIER, _stringBuilder.ToString());
				}
			}
			ch = (char)n;
			switch (ch)
			{
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s18;
					}
				case 'a':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s23;
					}
				default:
					{
						return new Token(TokenType.IDENTIFIER, _stringBuilder.ToString());
					}
			}

		s23:
			n = reader.Peek();
			if (n == -1)
			{
				if (_stringBuilder.Length == 0)
				{
					return new Token(TokenType._EOF_);
				}
				else
				{
					return new Token(TokenType.IDENTIFIER, _stringBuilder.ToString());
				}
			}
			ch = (char)n;
			switch (ch)
			{
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s18;
					}
				case 'l':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s24;
					}
				default:
					{
						return new Token(TokenType.IDENTIFIER, _stringBuilder.ToString());
					}
			}

		s24:
			n = reader.Peek();
			if (n == -1)
			{
				if (_stringBuilder.Length == 0)
				{
					return new Token(TokenType._EOF_);
				}
				else
				{
					return new Token(TokenType.IDENTIFIER, _stringBuilder.ToString());
				}
			}
			ch = (char)n;
			switch (ch)
			{
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s18;
					}
				case 's':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s25;
					}
				default:
					{
						return new Token(TokenType.IDENTIFIER, _stringBuilder.ToString());
					}
			}

		s25:
			n = reader.Peek();
			if (n == -1)
			{
				if (_stringBuilder.Length == 0)
				{
					return new Token(TokenType._EOF_);
				}
				else
				{
					return new Token(TokenType.IDENTIFIER, _stringBuilder.ToString());
				}
			}
			ch = (char)n;
			switch (ch)
			{
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s18;
					}
				case 'e':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s26;
					}
				default:
					{
						return new Token(TokenType.IDENTIFIER, _stringBuilder.ToString());
					}
			}

		s26:
			n = reader.Peek();
			if (n == -1)
			{
				if (_stringBuilder.Length == 0)
				{
					return new Token(TokenType._EOF_);
				}
				else
				{
					return new Token(TokenType.BOOLEAN, _stringBuilder.ToString());
				}
			}
			ch = (char)n;
			switch (ch)
			{
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s18;
					}
				default:
					{
						return new Token(TokenType.BOOLEAN, _stringBuilder.ToString());
					}
			}

		s27:
			n = reader.Peek();
			if (n == -1)
			{
				if (_stringBuilder.Length == 0)
				{
					return new Token(TokenType._EOF_);
				}
				else
				{
					return new Token(TokenType.IDENTIFIER, _stringBuilder.ToString());
				}
			}
			ch = (char)n;
			switch (ch)
			{
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s18;
					}
				case 'r':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s28;
					}
				default:
					{
						return new Token(TokenType.IDENTIFIER, _stringBuilder.ToString());
					}
			}

		s28:
			n = reader.Peek();
			if (n == -1)
			{
				if (_stringBuilder.Length == 0)
				{
					return new Token(TokenType._EOF_);
				}
				else
				{
					return new Token(TokenType.IDENTIFIER, _stringBuilder.ToString());
				}
			}
			ch = (char)n;
			switch (ch)
			{
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s18;
					}
				case 'u':
					{
						reader.Read();
						_stringBuilder.Append(ch);
						goto s25;
					}
				default:
					{
						return new Token(TokenType.IDENTIFIER, _stringBuilder.ToString());
					}
			}

		s29:
			return new Token(TokenType.LEFT_CURLY_BRACE, _stringBuilder.ToString());

		s30:
			return new Token(TokenType.UNION, _stringBuilder.ToString());

		s31:
			return new Token(TokenType.RIGHT_CURLY_BRACE, _stringBuilder.ToString());

		se:
			return new Token(TokenType._ERROR_, _stringBuilder.ToString());

		}

	}
}
